-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-05-02 21:27:08 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

set echo on
SPOOL pat_schema_output.txt

--group name: G297

DROP TABLE driver CASCADE CONSTRAINTS;

DROP TABLE driver_language CASCADE CONSTRAINTS;

DROP TABLE feature CASCADE CONSTRAINTS;

DROP TABLE language CASCADE CONSTRAINTS;

DROP TABLE location CASCADE CONSTRAINTS;

DROP TABLE noc CASCADE CONSTRAINTS;

DROP TABLE official CASCADE CONSTRAINTS;

DROP TABLE training_module CASCADE CONSTRAINTS;

DROP TABLE trip CASCADE CONSTRAINTS;

DROP TABLE valid_module CASCADE CONSTRAINTS;

DROP TABLE vehicle CASCADE CONSTRAINTS;

DROP TABLE vehicle_feature CASCADE CONSTRAINTS;

DROP TABLE vehicle_model CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE driver (
    driver_id                 NUMBER(4) NOT NULL,
    driver_given_name         VARCHAR2(20) NOT NULL,
    driver_family_name        VARCHAR2(20) NOT NULL,
    driver_licence_no         CHAR(18) NOT NULL,
    driver_date_of_birth      DATE NOT NULL,
    driver_security_level     CHAR(1) DEFAULT 'R' NOT NULL,
    driver_sus_status         CHAR(1) DEFAULT 'N' NOT NULL,
    driver_totcount_train_mod NUMBER(2) NOT NULL
);

ALTER TABLE driver
    ADD CONSTRAINT chk_driver_security_level CHECK ( driver_security_level IN ( 'F', 'R' ) );

ALTER TABLE driver
    ADD CONSTRAINT chk_sus_status CHECK ( driver_sus_status IN ( 'N', 'S' ) );

COMMENT ON COLUMN driver.driver_id IS
    'driver id ';

COMMENT ON COLUMN driver.driver_given_name IS
    'Driver given name';

COMMENT ON COLUMN driver.driver_family_name IS
    'driver family name';

COMMENT ON COLUMN driver.driver_licence_no IS
    'driver licence number';

COMMENT ON COLUMN driver.driver_date_of_birth IS
    'driver date of birth';

COMMENT ON COLUMN driver.driver_security_level IS
    'Driver security level clearance, F - FULL, R - RESTRICTED, defualt value is R. ';

COMMENT ON COLUMN driver.driver_sus_status IS
    'driver suspension status S - Suspended; N - Not Suspended, Default is N';

COMMENT ON COLUMN driver.driver_totcount_train_mod IS
    'total count of modules completed by the driver ';

ALTER TABLE driver ADD CONSTRAINT driver_pk PRIMARY KEY ( driver_id );

CREATE TABLE driver_language (
    driver_language_id NUMBER(3) NOT NULL,
    driver_id          NUMBER(4) NOT NULL,
    language_code      CHAR(2) NOT NULL
);

COMMENT ON COLUMN driver_language.driver_language_id IS
    'driver language id';

COMMENT ON COLUMN driver_language.driver_id IS
    'driver id ';

COMMENT ON COLUMN driver_language.language_code IS
    'Language code';

ALTER TABLE driver_language ADD CONSTRAINT driver_language_pk PRIMARY KEY ( driver_language_id );

ALTER TABLE driver_language ADD CONSTRAINT driver_language_nk UNIQUE ( language_code,
                                                                       driver_id );

CREATE TABLE feature (
    feature_id   NUMBER(7) NOT NULL,
    feature_name VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN feature.feature_id IS
    'Feature id';

COMMENT ON COLUMN feature.feature_name IS
    'Feature name';

ALTER TABLE feature ADD CONSTRAINT feature_pk PRIMARY KEY ( feature_id );

CREATE TABLE language (
    language_code CHAR(2) NOT NULL,
    language_name VARCHAR2(25) NOT NULL
);

COMMENT ON COLUMN language.language_code IS
    'Language code';

COMMENT ON COLUMN language.language_name IS
    'Language name';

ALTER TABLE language ADD CONSTRAINT language_pk PRIMARY KEY ( language_code );

CREATE TABLE location (
    loc_id      NUMBER(2) NOT NULL,
    loc_name    VARCHAR2(50) NOT NULL,
    loc_type    VARCHAR2(50) NOT NULL,
    loc_address VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN location.loc_id IS
    ' Location id';

COMMENT ON COLUMN location.loc_name IS
    'Location name';

COMMENT ON COLUMN location.loc_type IS
    'Location type';

COMMENT ON COLUMN location.loc_address IS
    'location addresss';

ALTER TABLE location ADD CONSTRAINT pick_up_location_pk PRIMARY KEY ( loc_id );

CREATE TABLE noc (
    ioc_code               CHAR(3) NOT NULL,
    noc_country_name       VARCHAR2(50) NOT NULL,
    noc_country_population NUMBER(12) NOT NULL
);

COMMENT ON COLUMN noc.ioc_code IS
    'IOC country code';

COMMENT ON COLUMN noc.noc_country_name IS
    'Name of the country/region in NOC';

COMMENT ON COLUMN noc.noc_country_population IS
    'Population of the country/region in NOC';

ALTER TABLE noc ADD CONSTRAINT noc_pk PRIMARY KEY ( ioc_code );

CREATE TABLE official (
    official_id        CHAR(7) NOT NULL,
    official_name      VARCHAR2(50) NOT NULL,
    official_role      VARCHAR2(20) NOT NULL,
    official_member_id CHAR(7),
    ioc_code           CHAR(3) NOT NULL
);

COMMENT ON COLUMN official.official_id IS
    'Officials olympic id';

COMMENT ON COLUMN official.official_name IS
    'Official name';

COMMENT ON COLUMN official.official_role IS
    'Role of the official';

COMMENT ON COLUMN official.official_member_id IS
    'Officials olympic id';

COMMENT ON COLUMN official.ioc_code IS
    'IOC country code';

ALTER TABLE official ADD CONSTRAINT official_pk PRIMARY KEY ( official_id );

CREATE TABLE training_module (
    train_mod_code       VARCHAR2(20) NOT NULL,
    train_mod_name       VARCHAR2(30) NOT NULL,
    train_mod_length     NUMBER(1) NOT NULL,
    train_mod_desc       VARCHAR2(50) NOT NULL,
    train_mod_exp_period NUMBER(2) NOT NULL
);

COMMENT ON COLUMN training_module.train_mod_code IS
    'Training module code';

COMMENT ON COLUMN training_module.train_mod_name IS
    'Training module name';

COMMENT ON COLUMN training_module.train_mod_length IS
    'Training module length';

COMMENT ON COLUMN training_module.train_mod_desc IS
    'Training module description';

COMMENT ON COLUMN training_module.train_mod_exp_period IS
    'Training module expiry period';

ALTER TABLE training_module ADD CONSTRAINT training_module_pk PRIMARY KEY ( train_mod_code );

CREATE TABLE trip (
    trip_id                       NUMBER(4) NOT NULL,
    trip_pick_up_intend_datetime  DATE NOT NULL,
    trip_pick_up_actual_datetime  DATE,
    trip_drop_off_intend_datetime DATE NOT NULL,
    trip_drop_off_actual_datetime DATE,
    trip_passenger_count          NUMBER(2) NOT NULL,
    vin_no                        CHAR(17) NOT NULL,
    driver_id                     NUMBER(4) NOT NULL,
    language_code                 CHAR(2) NOT NULL,
    official_id                   CHAR(7) NOT NULL,
    pick_up_loc_id                NUMBER(2) NOT NULL,
    drop_off_loc_id               NUMBER(2) NOT NULL
);

COMMENT ON COLUMN trip.trip_id IS
    'trip id';

COMMENT ON COLUMN trip.trip_pick_up_intend_datetime IS
    'Trip pick up intend date and time';

COMMENT ON COLUMN trip.trip_pick_up_actual_datetime IS
    'Trip pick up actual date and time';

COMMENT ON COLUMN trip.trip_drop_off_intend_datetime IS
    'Trip drop off intend date and time';

COMMENT ON COLUMN trip.trip_drop_off_actual_datetime IS
    'Trip drop off actual date and time';

COMMENT ON COLUMN trip.trip_passenger_count IS
    'The number of passengers for the trip';

COMMENT ON COLUMN trip.vin_no IS
    'Vehicle identification number';

COMMENT ON COLUMN trip.driver_id IS
    'driver id ';

COMMENT ON COLUMN trip.language_code IS
    'Language code';

COMMENT ON COLUMN trip.official_id IS
    'Officials olympic id';

COMMENT ON COLUMN trip.pick_up_loc_id IS
    ' Location id';

COMMENT ON COLUMN trip.drop_off_loc_id IS
    ' Location id';

ALTER TABLE trip ADD CONSTRAINT trip_pk PRIMARY KEY ( trip_id );

CREATE TABLE valid_module (
    valid_mod_id             VARCHAR2(20) NOT NULL,
    valid_mod_completed_date DATE NOT NULL,
    driver_id                NUMBER(4) NOT NULL,
    train_mod_code           VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN valid_module.valid_mod_id IS
    'valid module id';

COMMENT ON COLUMN valid_module.valid_mod_completed_date IS
    'Date of the module completion';

COMMENT ON COLUMN valid_module.driver_id IS
    'driver id ';

COMMENT ON COLUMN valid_module.train_mod_code IS
    'Training module code';

ALTER TABLE valid_module ADD CONSTRAINT valid_module_pk PRIMARY KEY ( valid_mod_id );

ALTER TABLE valid_module
    ADD CONSTRAINT valid_module_nk UNIQUE ( valid_mod_completed_date,
                                            train_mod_code,
                                            driver_id );

CREATE TABLE vehicle (
    vin_no                CHAR(17) NOT NULL,
    vehicle_model         VARCHAR2(20) NOT NULL,
    vehicle_rego          CHAR(7) NOT NULL,
    vehicle_seat_capacity NUMBER(2) NOT NULL,
    vehicle_curr_odometer NUMBER(6) NOT NULL,
    vehicle_year          NUMBER(4) NOT NULL
);

COMMENT ON COLUMN vehicle.vin_no IS
    'Vehicle identification number';

COMMENT ON COLUMN vehicle.vehicle_model IS
    'Model of the vehicle';

COMMENT ON COLUMN vehicle.vehicle_rego IS
    'Vehicle registration number';

COMMENT ON COLUMN vehicle.vehicle_seat_capacity IS
    'Seats number of passengers';

COMMENT ON COLUMN vehicle.vehicle_curr_odometer IS
    'Vehicle current oddmeter';

COMMENT ON COLUMN vehicle.vehicle_year IS
    'Vehicle year';

ALTER TABLE vehicle ADD CONSTRAINT vehicle_pk PRIMARY KEY ( vin_no );

CREATE TABLE vehicle_feature (
    vin_no     CHAR(17) NOT NULL,
    feature_id NUMBER(7) NOT NULL
);

COMMENT ON COLUMN vehicle_feature.vin_no IS
    'Vehicle identification number';

COMMENT ON COLUMN vehicle_feature.feature_id IS
    'Feature id';

ALTER TABLE vehicle_feature ADD CONSTRAINT vehicle_feature_pk PRIMARY KEY ( vin_no,
                                                                            feature_id );

CREATE TABLE vehicle_model (
    vehicle_model VARCHAR2(20) NOT NULL,
    vehicle_make  VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN vehicle_model.vehicle_model IS
    'Model of the vehicle';

COMMENT ON COLUMN vehicle_model.vehicle_make IS
    'Make of the vehicle';

ALTER TABLE vehicle_model ADD CONSTRAINT vehicle_model_pk PRIMARY KEY ( vehicle_model );

ALTER TABLE trip
    ADD CONSTRAINT driver_trip FOREIGN KEY ( driver_id )
        REFERENCES driver ( driver_id );

ALTER TABLE driver_language
    ADD CONSTRAINT driverlang_drive_pfk FOREIGN KEY ( driver_id )
        REFERENCES driver ( driver_id );

ALTER TABLE vehicle_feature
    ADD CONSTRAINT feature_vehiclefeature FOREIGN KEY ( feature_id )
        REFERENCES feature ( feature_id );

ALTER TABLE driver_language
    ADD CONSTRAINT language_driverlang_pfk FOREIGN KEY ( language_code )
        REFERENCES language ( language_code );

ALTER TABLE trip
    ADD CONSTRAINT language_trip FOREIGN KEY ( language_code )
        REFERENCES language ( language_code );

ALTER TABLE official
    ADD CONSTRAINT noc_offiicial FOREIGN KEY ( ioc_code )
        REFERENCES noc ( ioc_code );

ALTER TABLE official
    ADD CONSTRAINT official_official_member FOREIGN KEY ( official_member_id )
        REFERENCES official ( official_id );

ALTER TABLE trip
    ADD CONSTRAINT official_trip FOREIGN KEY ( official_id )
        REFERENCES official ( official_id );

ALTER TABLE trip
    ADD CONSTRAINT pickuploc_trip FOREIGN KEY ( pick_up_loc_id )
        REFERENCES location ( loc_id );

ALTER TABLE valid_module
    ADD CONSTRAINT trainmod_validmod FOREIGN KEY ( train_mod_code )
        REFERENCES training_module ( train_mod_code );

ALTER TABLE trip
    ADD CONSTRAINT trip FOREIGN KEY ( drop_off_loc_id )
        REFERENCES location ( loc_id );

ALTER TABLE trip
    ADD CONSTRAINT trip_vehicle FOREIGN KEY ( vin_no )
        REFERENCES vehicle ( vin_no );

ALTER TABLE valid_module
    ADD CONSTRAINT validmod_driver FOREIGN KEY ( driver_id )
        REFERENCES driver ( driver_id );

ALTER TABLE vehicle_feature
    ADD CONSTRAINT vehicle_vehiclefeature FOREIGN KEY ( vin_no )
        REFERENCES vehicle ( vin_no );

ALTER TABLE vehicle
    ADD CONSTRAINT vehicle_vehiclemodel_fk FOREIGN KEY ( vehicle_model )
        REFERENCES vehicle_model ( vehicle_model );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             0
-- ALTER TABLE                             32
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
SPOOL off
set echo off